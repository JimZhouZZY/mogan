name: Build and Test Liii STEM on macOS

on:
  push:
    branches: [ branch-1.2 ]
    paths:
      - 'src/**'
      - '!src/Plugins/Windows/**'
      - 'TeXmacs/plugins/goldfish/src/*'
      - 'tests/**'
      - 'xmake.lua'
      - 'xmake/packages.lua'
      - 'xmake/research.lua'
      - 'xmake/packages/**'
      - 'xmake-requires.lock'
      - '.github/workflows/ci-stem-macos-arm64.yml'
  pull_request:
    branches: [ branch-1.2 ]
    paths:
      - 'src/**'
      - '!src/Plugins/Windows/**'
      - 'TeXmacs/plugins/goldfish/src/*'
      - 'tests/**'
      - 'xmake.lua'
      - 'xmake/packages.lua'
      - 'xmake/research.lua'
      - 'xmake/packages/**'
      - 'xmake-requires.lock'
      - '.github/workflows/ci-stem-macos-arm64.yml'

jobs:
  macosbuild:
    strategy:
      matrix:
        os: [macos-13]
        arch: [x86_64]
    runs-on: macos-13
    timeout-minutes: 45
    if: always()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install dependencies
        run: |
          brew update
          brew install curl openssl libgit2
      - name: cache xmake
        uses: actions/cache@v4
        with:
          path: |
            ${{github.workspace}}/build/.build_cache
            /Users/runner/.xmake
          key: ${{ runner.os }}-xrepo-${{ matrix.arch }}-${{ hashFiles('**/packages.lua') }}
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.5.3
          target: 'desktop'
          cache: 'true'
          
      - name: set XMAKE_GLOBALDIR
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" >> $GITHUB_ENV

      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: v2.8.7
          actions-cache-folder: '.xmake-cache'

      - name: xmake repo --update
        run: xmake repo --update

      - name: cache packages from xrepo
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: xrepo-${{ runner.os }}-${{ matrix.arch }}-${{ hashFiles('xmake-requires.lock') }}

      - name: config
        run: xmake config --policies=build.ccache -o ${{ runner.workspace }}/build -m releasedbg --yes
      - name: build
        run: xmake build --yes -vD liii && xmake build --yes -vD --group=tests
      - name: C++ tests
        run: bash bin/test_all
        env:
          QT_QPA_PLATFORM: offscreen
      - name: Scheme tests
        run: bash bin/test_all_scheme
      - name: integration test
        run: bash bin/test_all_integrated
        env:
          QT_QPA_PLATFORM: offscreen
